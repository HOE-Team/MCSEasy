name: Cleanup Workflow Runs

on:
  workflow_dispatch:
    inputs:
      delete_runs:
        description: 'Delete all workflow runs'
        required: true
        default: 'true'
        type: boolean
      delete_artifacts:
        description: 'Delete all artifacts'
        required: true
        default: 'true'
        type: boolean

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write

    steps:
      - name: Delete Artifacts
        if: ${{ inputs.delete_artifacts == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const artifacts = await github.paginate(
              github.rest.actions.listArtifactsForRepo,
              { owner, repo, per_page: 100 }
            );
            console.log(`Found ${artifacts.length} artifacts to delete`);
            for (const artifact of artifacts) {
              if (artifact.workflow_run && artifact.workflow_run.id === context.runId) continue;
              console.log(`Deleting artifact: ${artifact.name} (ID: ${artifact.id})`);
              try {
                await github.rest.actions.deleteArtifact({
                  owner,
                  repo,
                  artifact_id: artifact.id,
                });
              } catch (error) {
                console.log(`Failed to delete artifact ${artifact.id}: ${error.message}`);
              }
            }

      - name: Delete Workflow Runs
        if: ${{ inputs.delete_runs == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const runs = await github.paginate(
              github.rest.actions.listWorkflowRunsForRepo,
              { owner, repo, status: 'completed', per_page: 100 }
            );
            console.log(`Found ${runs.length} runs to delete`);
            for (const run of runs) {
              console.log(`Deleting run: ${run.id}`);
              try {
                await github.rest.actions.deleteWorkflowRun({
                  owner,
                  repo,
                  run_id: run.id,
                });
              } catch (error) {
                console.log(`Failed to delete run ${run.id}: ${error.message}`);
              }
            }
